
3-23
PascalTriangle 考察杨辉三角的处理

PathSum : 树的深度搜索，（也可是中序遍历）但是因为是 需要计算一个path遍历节点的值，
所以需要累加和，采用list收集节点的方式

QueueToStack 两个队列实现一个栈，  一个负责入栈，另一个处理出栈，来回变化数据的，

MinTreeDepth :树的广度优先遍历


3-24:
MergeSortArray : 合并已经排序的数组，因为涉及存储，那么不能像链表的合并
从尾部来进行归并， 避免在前面合并时，出现的存储后移问题


ValidSudu：数独校验，利用 set添加元素时，不能重复特性

SwapeNodeInParis : 链表两两交换，定义前后的索引

3-25:
DuplicateArray : 一个数组中重复元素， 使用map缓存

RemoveNthNode : 链表删除，两个游标走动

ReverseInteger: 注意计算溢出  * 10 换算

ValidPar ： 类似正则，匹配，使用栈结构



3-28：
CountPrimes: 计算质数，利用填充法 将一个数的倍数进行划分
SummaryRanges: 计算范围的数，遍历即可

RangeSumQuery : 计算数据 范围值，注意策略， 提前缓存，因为查询方法平凡调用

PalindromeList : 回文链表， 注意反转， 和查询遍历，  时间 空间复杂度

RemoveLinkedList : 两指针走动

BitsAdd :


3-29：
Two Sum ：一般在处理数组索引位置时，可以利用map来存储

RotateArray : 数组后移，特殊情况判断，

First Bad Version ： 二分逻辑处理，

Min Stack ： 处理时，使用链表，效率更高，获取最小值时，

Compare Version Numbers : 字符截取，判断，

String to integer : 要处理很多特殊的case，逻辑 + -

SortList :链表的排序，本身是可以参考数组的排序方式， 因要求了空间复杂度， 使用归并排序，





